<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oFEPMngKIicAAAAASUVORK5CYII=
</value>
  </data>
</root>